<?php
/**
 * 使用本接口需要开通当面付
 */

namespace Bing\Controller;
use Common\Controller\AlipayBaseController;
use Think\Log;
class AlipayJsapiController extends AlipayBaseController
{


    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $redirect_url = "http://" . $_SERVER['HTTP_HOST'] . U("Bing/AlipayJsapi/sauthorize");
        $url = "https://openauth.alipay.com/oauth2/publicAppAuthorize.htm?app_id=" . self::APPID . "&scope=auth_base&redirect_uri=" . $redirect_url;
        redirect($url);
    }

    /**
     * 获取用户授权信息
     */
    public function authorize()
    {
        $aop = new \AopClient();
        $aop->appId = self::APPID;
        $aop->rsaPrivateKeyFilePath = $this->privatekey;
        $aop->alipayPublicKey = $this->publickey;
        $request = new \AlipaySystemOauthTokenRequest();
        $request->setGrantType("authorization_code");
        $request->setCode($_REQUEST['auth_code']);
        $result = $aop->execute($request);
        $data = (array)$result;
        $oauth_token_response = (array)$data['alipay_system_oauth_token_response'];
//        Log::write(var_export($oauth_token_response,true));
        cookie("user_id", $oauth_token_response['user_id']);
        $this->display("alipayJsapi/index");
    }


    /**
     * 创建订单
     * @param $buyer_id
     */
    public function create_trade()
    {
        $buyer_id = cookie("user_id");
        $aop = new \AopClient();
        $aop->appId = self::APPID;
        $aop->rsaPrivateKeyFilePath = $this->privatekey;
        $aop->alipayPublicKey = $this->publickey;
        $request_create_trade = new \AlipayTradeCreateRequest();
        $request_create_trade->setNotifyUrl($this->notifyurl);

        $orderInfo = array(
            'out_trade_no' => date("YmdHis"),
            'total_amount' => I('get.total_amount'),
            'subject' => I('get.subject'),
            'buyer_id' => $buyer_id
        );
        $request_create_trade->setBizContent(json_encode($orderInfo));
        $results = (array)$aop->execute($request_create_trade);
        Log::write(var_export($results, true));
        $responseNode = (array)$results['alipay_trade_create_response'];
//        Log::write(var_export($responseNode,true));
        $data['code'] = $responseNode['code'];
        $data['msg'] = $responseNode['sub_code'];
        if (!empty($responseNode['code']) && $responseNode['code'] == 10000) {
            //成功返预订单号
            $data['trade_no'] = $responseNode['trade_no'];
            $this->ajaxReturn($data);
        } else {
            //失败返回相关状态
            $this->ajaxReturn($data);
        }
    }


    /**
     * 支付结果回调通知
     */
    public function notifyUrl()
    {
        $data = I('get.');
        Log::write(var_export($data, true));
        switch ($data['notify_type']) {
            case 'tradeStatus.TRADE_CLOSED':
                //交易关闭
                break;
            case 'tradeStatus.TRADE_FINISHED':
                //交易完结
                break;
            case 'tradeStatus.TRADE_SUCCESS':
                //支付成功
                break;
            case 'tradeStatus.WAIT_BUYER_PAY':
                //交易创建
                break;
        }
    }
}
